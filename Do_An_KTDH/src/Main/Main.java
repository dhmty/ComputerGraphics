/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import Element.DoiToaDo;
import Element.Dthang;
import Element.Elip;
import Element.Htron;
import Hinh2D.Car1;
import Hinh2D.RoadMarking;
import Hinh2D.StreetLamp;
import Hinh2D.Star;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author ADMIN
 */
public class Main extends javax.swing.JFrame {

    private String pathCwShow = "./src/image/ClockwatcherShow.PNG";
    private String pathRoadMarkingShow = "./src/image/RoadMarkingShow.PNG";
    private String pathStarShow = "./src/image/StarShow.PNG";
    private String pathCarShow = "./src/image/CarShow1.PNG";
    private String path2D = "./src/image/img2d.jpg";
   // private String path3D = "./src/image/img3d.jpg";
    private String path2DPicture = "./src/image/do_an1.png";
    private String path2DClockwatcher = "./src/image/img.jpg";
    private Point rootCar1 = new Point(460, 400);
    private Point rootCar = new Point(430, 285);
    private Point rootClockwatcher = new Point(890, 130);
    boolean isDrew2D = false;
    boolean isDrew = false;
    boolean isDrewOxy = false;
    boolean isDrewGrib = false;
    
    private BufferedImage originImage2D;
   
    private BufferedImage img2D;
    private BufferedImage img2DPicture;
    private BufferedImage img2DClockwatcher;
    private boolean isRectangular = true;
    private int ratioClockwatcher = 20;
    private int ratioCar = 100;
    final private int WIDTH2D;
    final private int HEIGHT2D;
    final private Point root2D;
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Đồ Án Kỹ Thuật Đồ Họa - Nhóm 8");
        setIconImage(readFileBufferedImage("./src/image/draw2.PNG"));
        WIDTH2D = lbl2D.getWidth();
        HEIGHT2D = lbl2D.getHeight();
        root2D = new Point(WIDTH2D / 2, HEIGHT2D / 2);
        //originImage2D = readFileBufferedImage(path2D);
         System.out.println(WIDTH2D+" "+HEIGHT2D);
         img2DPicture = readFileBufferedImage(path2DPicture);
         img2D=copyImage(img2DPicture);
         setIcon(img2D, lbl2D);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lbl2D = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox_SG = new javax.swing.JCheckBox();
        jTabbedPane_show = new javax.swing.JTabbedPane();
        jPanel_showvach = new javax.swing.JPanel();
        jLabel_showvach = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Panel_ToaDo = new javax.swing.JPanel();
        draw = new javax.swing.JButton();
        hieu_ung = new javax.swing.JButton();
        TextField1 = new javax.swing.JTextField();
        TextField2 = new javax.swing.JTextField();
        TextField3 = new javax.swing.JTextField();
        TextField4 = new javax.swing.JTextField();
        TextField5 = new javax.swing.JTextField();
        TextField6 = new javax.swing.JTextField();
        TextField7 = new javax.swing.JTextField();
        TextField8 = new javax.swing.JTextField();
        TextField9 = new javax.swing.JTextField();
        TextField10 = new javax.swing.JTextField();
        TextField11 = new javax.swing.JTextField();
        TextField12 = new javax.swing.JTextField();
        TextField13 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu_App = new javax.swing.JMenu();
        jMenuItem_2D = new javax.swing.JMenuItem();
        jMenuItem_3D = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setBackground(new java.awt.Color(102, 255, 102));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl2D.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl2D.setMaximumSize(new java.awt.Dimension(0, 0));
        lbl2D.setMinimumSize(new java.awt.Dimension(0, 0));
        lbl2D.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.add(lbl2D, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 860, 570));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jCheckBox_SG.setText("Hiển thị Grid");
        jCheckBox_SG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_SGActionPerformed(evt);
            }
        });

        jLabel_showvach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/RoadMarkingShow.PNG"))); // NOI18N

        javax.swing.GroupLayout jPanel_showvachLayout = new javax.swing.GroupLayout(jPanel_showvach);
        jPanel_showvach.setLayout(jPanel_showvachLayout);
        jPanel_showvachLayout.setHorizontalGroup(
            jPanel_showvachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_showvachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_showvach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel_showvachLayout.setVerticalGroup(
            jPanel_showvachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_showvachLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_showvach, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160))
        );

        jTabbedPane_show.addTab("VẠCH ĐƯỜNG", jPanel_showvach);

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/CarShow1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane_show.addTab("XE", jPanel4);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/StarShow.PNG"))); // NOI18N
        jLabel1.setText("jLabel1");
        jTabbedPane_show.addTab("NGÔI SAO", jLabel1);

        jButton1.setText("Bắt Đầu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jCheckBox_SG)
                .addGap(78, 78, 78)
                .addComponent(jButton1)
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane_show, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox_SG)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane_show, javax.swing.GroupLayout.PREFERRED_SIZE, 608, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 30, 370, 670));

        jTabbedPane1.addTab("2D_XE", jPanel1);

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));

        Panel_ToaDo.setBackground(new java.awt.Color(255, 255, 255));
        Panel_ToaDo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Panel_ToaDo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Panel_ToaDoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Panel_ToaDoLayout = new javax.swing.GroupLayout(Panel_ToaDo);
        Panel_ToaDo.setLayout(Panel_ToaDoLayout);
        Panel_ToaDoLayout.setHorizontalGroup(
            Panel_ToaDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 998, Short.MAX_VALUE)
        );
        Panel_ToaDoLayout.setVerticalGroup(
            Panel_ToaDoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
        );

        draw.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        draw.setForeground(new java.awt.Color(204, 0, 0));
        draw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/brushCursor2.png"))); // NOI18N
        draw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawActionPerformed(evt);
            }
        });

        hieu_ung.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hieu_ung.setForeground(new java.awt.Color(255, 0, 0));
        hieu_ung.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/move342.png"))); // NOI18N
        hieu_ung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hieu_ungActionPerformed(evt);
            }
        });

        TextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField6ActionPerformed(evt);
            }
        });

        TextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Tọa độ người dùng: 1 đơn vị = 5 pixel");

        jLabel3.setText("Đầu");

        jLabel4.setText("Thân");

        jLabel5.setText("Tay trái");

        jLabel6.setText("Tay phải");

        jLabel7.setText("Chân trái");

        jLabel8.setText("Chân phải");

        jLabel9.setText("Bàn chân trái");

        jLabel10.setText("Bàn chân phải");

        jLabel11.setText("Cung");

        jLabel12.setText("Dây cung");

        jLabel13.setText("Đuôi mũi tên");

        jLabel14.setText("Đầu mũi tên");

        jLabel15.setText("Bia Bắn");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Panel_ToaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel15)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(draw, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hieu_ung, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(TextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(TextField13)
                                .addComponent(TextField12)
                                .addComponent(TextField11)
                                .addComponent(TextField10)
                                .addComponent(TextField9)))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(draw, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hieu_ung, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Panel_ToaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("2D_BANCUNG", jPanel3);

        jMenuBar1.setBackground(new java.awt.Color(0, 102, 102));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/home_40px.png"))); // NOI18N
        jMenu1.setText("TRANG CHỦ");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem1.setText("Cài đặt");
        jMenu1.add(jMenuItem1);

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem2.setText("Ứng dụng");
        jMenu1.add(jMenuItem2);

        jMenuItem12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem12.setText("Trợ giúp");
        jMenu1.add(jMenuItem12);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/settings_48px.png"))); // NOI18N
        jMenu2.setText("CÀI ĐẶT");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem3.setText("Chỉnh màu");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem4.setText("Xoá ");
        jMenu2.add(jMenuItem4);

        jMenuItem9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem9.setText("Phóng to");
        jMenu2.add(jMenuItem9);

        jMenuBar1.add(jMenu2);

        jMenu_App.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/application_shield_48px.png"))); // NOI18N
        jMenu_App.setText("ỨNG DỤNG");
        jMenu_App.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem_2D.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem_2D.setText("Hình 2D");
        jMenu_App.add(jMenuItem_2D);

        jMenuItem_3D.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem_3D.setText("Hình 3D");
        jMenuItem_3D.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem_3DMouseClicked(evt);
            }
        });
        jMenuItem_3D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_3DActionPerformed(evt);
            }
        });
        jMenu_App.add(jMenuItem_3D);

        jMenuBar1.add(jMenu_App);

        jMenuItem7.setText("jMenuItem7");
        jMenu4.add(jMenuItem7);

        jMenuItem8.setText("jMenuItem8");
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/help_48px.png"))); // NOI18N
        jMenu6.setText("TRỢ GIÚP");
        jMenu6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jMenuItem10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem10.setText("Trợ giúp");
        jMenu6.add(jMenuItem10);

        jMenuItem11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem11.setText("Thông tin nhóm");
        jMenu6.add(jMenuItem11);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("3D", new Menu_app_3D());
        if (jTabbedPane1.getSelectedIndex()==0) startPicture();

        pack();
    }// </editor-fold>//GEN-END:initComponents

     
    private void runPicture() {
        int times = 0, time_delay = 150, s1 = -4, s2 = -10, s3 = 0, s4 = -15;
        BufferedImage imgTemp;
        while (true) {
            if ( jTabbedPane1.getSelectedIndex() != 0 ) {
                return;
            }
           imgTemp = copyImage(img2D);
           RoadMarking rm = new RoadMarking(imgTemp, rootCar, ratioCar);
           imgTemp = rm.drawRoadMarking(times % 10);
            if (jTabbedPane_show.getSelectedIndex() == 0) {
                showValue(rm);
                System.out.println("okre");
            }
            //graw StreetSlamp
//            StreetLamp sl= new StreetLamp(imgTemp, rootCar, ratioCar);
//            imgTemp = sl.drawStreetLamp(times % 10);
            //draw car
            Car1 car = new Car1(rootCar, imgTemp, ratioCar);
            imgTemp = car.draw(ratioCar, times % 3);

            if (jTabbedPane_show.getSelectedIndex() == 1) {
                showValue(car);
                System.out.println("okre2");
            }
          
            
//draw star
            Point rootStar1 = new Point(1000, -10);
            Point rootStar2 = new Point(1000, -10);
            Point rootStar3 = new Point(1000, -10);
            Point rootStar4 = new Point(1000, -10);
            Star st1 = new Star(imgTemp, rootStar1, ratioCar);
            Star st2 = new Star(imgTemp, rootStar2, ratioCar);
            Star st3 = new Star(imgTemp, rootStar3, ratioCar);
            Star st4 = new Star(imgTemp, rootStar4, ratioCar);
            imgTemp = st1.drawStar(s1 % 20);
            imgTemp = st2.drawStar(s2 % 24);
            imgTemp = st3.drawStar(s3 % 24);
            imgTemp = st4.drawStar(s4 % 24);
            //show info
            if (jTabbedPane_show.getSelectedIndex() == 2) {
                showValue(st1, st2, st3);
            }
            //draw on lbl2D
            Graphics g = lbl2D.getGraphics();
            g.drawImage(imgTemp, 0, 0, null);
            //sleep
            try {
                Thread.sleep(time_delay);
            } catch (InterruptedException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            times++;
            s1++;
            s2++;
            s3++;
            s4++;
        }
    }
    private void startPicture() {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {
                runPicture();
                return null;
            }

        };
        worker.execute();
    }
    
    
    private BufferedImage readFileBufferedImage(String path) {
        try {
            return ImageIO.read(new File(path));
        } catch (IOException ex) {
            
        }
        return null;
    }
      
    private void setIcon(BufferedImage img, JLabel lbl) {
        lbl.setIcon(new ImageIcon(img));
    }
    
     public BufferedImage copyImage(BufferedImage image) {
        BufferedImage temp = new BufferedImage(image.getWidth(), image.getHeight(),
                BufferedImage.TYPE_INT_RGB);
        Graphics g = temp.getGraphics();
        g.drawImage(image, 0, 0, image.getWidth(), image.getHeight(), null);
        return temp;
    }
      private BufferedImage drawOxy(BufferedImage image) {
        Graphics g = image.getGraphics();
        //Truc
        g.setColor(Color.red);
          System.out.println(HEIGHT2D/2);
          System.out.println(WIDTH2D/2);
        g.drawLine(0, HEIGHT2D / 2, WIDTH2D, HEIGHT2D / 2); // 0,250 900,250
        g.drawLine(WIDTH2D / 2, 0, WIDTH2D / 2, HEIGHT2D);  // 450,0,450,500
        drawGrib(image);
        return image;
    }

    public BufferedImage drawGrib(BufferedImage image) {
        Graphics g = image.getGraphics();
        int ratio = 5;
        //
        int sum = 0;
        g.setColor(Color.black);
        while (sum != HEIGHT2D / 2) {
            sum += ratio;
            g.drawLine(0, HEIGHT2D / 2 + sum, WIDTH2D, HEIGHT2D / 2 + sum);
            g.drawLine(0, HEIGHT2D / 2 - sum, WIDTH2D, HEIGHT2D / 2 - sum);
        }
        sum = 0;
        while (sum != WIDTH2D / 2) {
            sum += ratio;
            g.drawLine(WIDTH2D / 2 + sum, 0, WIDTH2D / 2 + sum, HEIGHT2D);
            g.drawLine(WIDTH2D / 2 - sum, 0, WIDTH2D / 2 - sum, HEIGHT2D);
        }
        return image;
    }
     
    private void showValue(RoadMarking rm) {
        int x = 180, y = 32;
        BufferedImage imgShow = readFileBufferedImage(pathRoadMarkingShow);
        Graphics g = imgShow.getGraphics();
        //SHOW VALUE
        g.setColor(Color.BLACK);
        g.drawString((int) Math.round((rm.getR1().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR1().getRootS().getY()) / 5), 60, 31 + y * 0);
        g.drawString((int) Math.round((rm.getR2().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR2().getRootS().getY()) / 5), 60, 31 + y * 1);
        g.drawString((int) Math.round((rm.getR3().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR3().getRootS().getY()) / 5), 60, 31 + y * 2);
        g.drawString((int) Math.round((rm.getR4().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR4().getRootS().getY()) / 5), 60, 31 + y * 3);
        g.drawString((int) Math.round((rm.getR5().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR5().getRootS().getY()) / 5), 60, 31 + y * 4);
        g.drawString((int) Math.round((rm.getR6().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR6().getRootS().getY()) / 5), 60, 31 + y * 5);
        g.drawString((int) Math.round((rm.getR7().getRootS().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR7().getRootS().getY()) / 5), 60, 31 + y * 6);

        g.drawString((int) Math.round((rm.getR1().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR1().getRootE().getY()) / 5), 60 + x, 31 + y * 0);
        g.drawString((int) Math.round((rm.getR2().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR2().getRootE().getY()) / 5), 60 + x, 31 + y * 1);
        g.drawString((int) Math.round((rm.getR3().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR3().getRootE().getY()) / 5), 60 + x, 31 + y * 2);
        g.drawString((int) Math.round((rm.getR4().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR4().getRootE().getY()) / 5), 60 + x, 31 + y * 3);
        g.drawString((int) Math.round((rm.getR5().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR5().getRootE().getY()) / 5), 60 + x, 31 + y * 4);
        g.drawString((int) Math.round((rm.getR6().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR6().getRootE().getY()) / 5), 60 + x, 31 + y * 5);
        g.drawString((int) Math.round((rm.getR7().getRootE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - rm.getR7().getRootE().getY()) / 5), 60 + x, 31 + y * 6);
        //DRAW
        Graphics g1 = jPanel_showvach.getGraphics();
        g1.drawImage(imgShow, 0, 0, null);
    }
      private void showValue(Car1 car) {
        int x = 200, y = 32;
        BufferedImage imgShow = readFileBufferedImage(pathCarShow);
        Graphics g = imgShow.getGraphics();
        //SHOW VALUE
        g.setColor(Color.BLACK);
        g.drawString((int) Math.round((car.getA().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getA().getY()) / 5), 55, 23 + y * 0);
        g.drawString((int) Math.round((car.getB().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getB().getY()) / 5), 55, 23 + y * 1);
        g.drawString((int) Math.round((car.getC().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getC().getY()) / 5), 55, 23 + y * 2);
        g.drawString((int) Math.round((car.getD().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getD().getY()) / 5), 55, 23 + y * 3);
        g.drawString((int) Math.round((car.getE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getE().getY()) / 5), 55, 23 + y * 4);
        g.drawString((int) Math.round((car.getF().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getF().getY()) / 5), 55, 23 + y * 5);
        g.drawString((int) Math.round((car.getG().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getG().getY()) / 5), 55, 23 + y * 6);
        g.drawString((int) Math.round((car.getH().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getH().getY()) / 5), 55, 23 + y * 7);
        g.drawString((int) Math.round((car.getI().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getI().getY()) / 5), 55, 23 + y * 8);
        g.drawString((int) Math.round((car.getJ().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getJ().getY()) / 5), 55, 23 + y * 9);
        g.drawString((int) Math.round((car.getK().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getK().getY()) / 5), 55, 23 + y * 10);
        g.drawString((int) Math.round((car.getL().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL().getY()) / 5), 55, 23 + y * 11);
        g.drawString((int) Math.round((car.getM().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getM().getY()) / 5), 55, 23 + y * 12);
        g.drawString((int) Math.round((car.getN().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getN().getY()) / 5), 55, 23 + y * 13);
        g.drawString((int) Math.round((car.getP().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getP().getY()) / 5), 55, 23 + y * 14);
// cột phải
        g.drawString((int) Math.round((car.getQ().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getQ().getY()) / 5), 55 + x, 23 + y * 0);
        g.drawString((int) Math.round((car.getM1().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getM1().getY()) / 5), 55 + x, 23 + y * 1);
        g.drawString((int) Math.round((car.getO1().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getO1().getY()) / 5), 55 + x, 23 + y * 2);
        g.drawString((int) Math.round((car.getO2().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getO2().getY()) / 5), 55 + x, 23 + y * 3);
        
        g.drawString((int) Math.round((car.getL1().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL1().getEnd().getY()) / 5), 55 + x, 23 + y * 4);
        g.drawString((int) Math.round((car.getL2().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL2().getEnd().getY()) / 5), 55 + x, 23 + y * 5);
        g.drawString((int) Math.round((car.getL3().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL3().getEnd().getY()) / 5), 55 + x, 23 + y * 6);
        g.drawString((int) Math.round((car.getL4().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL4().getEnd().getY()) / 5), 55 + x, 23 + y * 7);
        g.drawString((int) Math.round((car.getL5().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL5().getEnd().getY()) / 5), 55 + x, 23 + y * 8);
        g.drawString((int) Math.round((car.getL6().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL6().getEnd().getY()) / 5), 55 + x, 23 + y * 9);
        g.drawString((int) Math.round((car.getL7().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL7().getEnd().getY()) / 5), 55 + x, 23 + y * 10);
        g.drawString((int) Math.round((car.getL8().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL8().getEnd().getY()) / 5), 55 + x, 23 + y * 11);
        g.drawString((int) Math.round((car.getL9().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL9().getEnd().getY()) / 5), 55 + x, 23 + y * 12);
        g.drawString((int) Math.round((car.getL10().getEnd().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - car.getL10().getEnd().getY()) / 5), 55 + x, 23 + y * 13);
        //DRAW
        Graphics g1 = jPanel_showvach.getGraphics();
        g1.drawImage(imgShow, 0, 0, null);
    }
       private void showValue(Star s1, Star s2, Star s3) {
        int x = 200, y = 32;
        BufferedImage imgShow = readFileBufferedImage(pathStarShow);
        Graphics g = imgShow.getGraphics();
        //SHOW VALUE
        g.setColor(Color.BLACK);
        g.drawString((int) Math.round((s1.getA().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getA().getY()) / 5), 52, 23 + y * 0);
        g.drawString((int) Math.round((s1.getB().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getB().getY()) / 5), 52, 23 + y * 1);
        g.drawString((int) Math.round((s1.getC().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getC().getY()) / 5), 52, 23 + y * 2);
        g.drawString((int) Math.round((s1.getD().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getD().getY()) / 5), 52, 23 + y * 3);
        g.drawString((int) Math.round((s1.getE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getE().getY()) / 5), 52, 23 + y * 4);
        g.drawString((int) Math.round((s2.getA().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getA().getY()) / 5), 52, 23 + y * 5);
        g.drawString((int) Math.round((s2.getB().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getB().getY()) / 5), 52, 23 + y * 6);
        g.drawString((int) Math.round((s2.getC().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getC().getY()) / 5), 52, 23 + y * 7);
        g.drawString((int) Math.round((s2.getD().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getD().getY()) / 5), 52, 23 + y * 8);
        g.drawString((int) Math.round((s2.getE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getE().getY()) / 5), 52, 23 + y * 9);
        g.drawString((int) Math.round((s3.getA().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getA().getY()) / 5), 52, 23 + y * 10);
        g.drawString((int) Math.round((s3.getB().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getB().getY()) / 5), 52, 23 + y * 11);
        g.drawString((int) Math.round((s3.getC().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getC().getY()) / 5), 52, 23 + y * 12);
        g.drawString((int) Math.round((s3.getD().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getD().getY()) / 5), 52, 23 + y * 13);
        g.drawString((int) Math.round((s3.getE().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getE().getY()) / 5), 52, 23 + y * 14);

        g.drawString((int) Math.round((s1.getF().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getF().getY()) / 5), 52 + x, 23 + y * 0);
        g.drawString((int) Math.round((s1.getG().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getG().getY()) / 5), 52 + x, 23 + y * 1);
        g.drawString((int) Math.round((s1.getH().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getH().getY()) / 5), 52 + x, 23 + y * 2);
        g.drawString((int) Math.round((s1.getI().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getI().getY()) / 5), 52 + x, 23 + y * 3);
        g.drawString((int) Math.round((s1.getJ().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s1.getJ().getY()) / 5), 52 + x, 23 + y * 4);
        g.drawString((int) Math.round((s2.getF().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getF().getY()) / 5), 52 + x, 23 + y * 5);
        g.drawString((int) Math.round((s2.getG().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getG().getY()) / 5), 52 + x, 23 + y * 6);
        g.drawString((int) Math.round((s2.getH().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getH().getY()) / 5), 52 + x, 23 + y * 7);
        g.drawString((int) Math.round((s2.getI().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getI().getY()) / 5), 52 + x, 23 + y * 8);
        g.drawString((int) Math.round((s2.getJ().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s2.getJ().getY()) / 5), 52 + x, 23 + y * 9);
        g.drawString((int) Math.round((s3.getF().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getF().getY()) / 5), 52 + x, 23 + y * 10);
        g.drawString((int) Math.round((s3.getG().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getG().getY()) / 5), 52 + x, 23 + y * 11);
        g.drawString((int) Math.round((s3.getH().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getH().getY()) / 5), 52 + x, 23 + y * 12);
        g.drawString((int) Math.round((s3.getI().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getI().getY()) / 5), 52 + x, 23 + y * 13);
        g.drawString((int) Math.round((s3.getJ().getX() - WIDTH2D / 2) / 5) + "; "
                + (int) Math.round((HEIGHT2D / 2 - s3.getJ().getY()) / 5), 52 + x, 23 + y * 14);
        //DRAW
         Graphics g1 = jPanel_showvach.getGraphics();
        g1.drawImage(imgShow, 0, 0, null);
    }
    private void jMenuItem_3DMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_3DMouseClicked
     
       
    }//GEN-LAST:event_jMenuItem_3DMouseClicked

    private void jMenuItem_3DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_3DActionPerformed
         
        
     
    }//GEN-LAST:event_jMenuItem_3DActionPerformed

    private void jCheckBox_SGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_SGActionPerformed
        // TODO add your handling code here:
        if (jCheckBox_SG.isSelected()){
            drawOxy(img2D);
            System.out.println("okedsdhjs");
        }
        else if (!jCheckBox_SG.isSelected()) {
            img2D=copyImage(img2DPicture);
            setIcon(img2D, lbl2D);
        }
    }//GEN-LAST:event_jCheckBox_SGActionPerformed

    private void Panel_ToaDoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Panel_ToaDoMouseClicked
        System.out.println("x: "+doitoado.doiMtoND(evt.getX(), evt.getY()));
        System.out.println("y: "+evt.getX());
        System.out.println("y: "+evt.getY());
    }//GEN-LAST:event_Panel_ToaDoMouseClicked

    private void drawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawActionPerformed
        heToaDo();
        Header();
        Body();
        Cung();
        cungTen();
        biaBan();
        toaDo_truoc();
    }//GEN-LAST:event_drawActionPerformed

    private void hieu_ungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hieu_ungActionPerformed
        BanDayCung(45,0,Color.GRAY);
        hieuUng_dayCung();
        hieuUng_muiTen();
        Cung();
        Header();

    }//GEN-LAST:event_hieu_ungActionPerformed

    private void TextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        startPicture();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField9ActionPerformed

    
     public Color choosecolor = Color.BLACK;
    public Point point24, point25, point26, point27,point28,point29,point30,
            point31,point32,point33,point34,point35,point36,point37,point38,
            point39,point40,point41, point42,point43,point44,point45,point46,point47,point48,point49,point50,point51;
    
    public Dthang dt17,dt18,dt19,dt20,dt21,dt22,dt23,dt24,dt25,dt26,dt27,dt28,dt29,dt30,dt31,d32;
    
    public Htron ht5,ht6;

    public Elip el1, el2, el3, el4, el5,el6,el7,el8,el9,el10;

    DoiToaDo doitoado = new DoiToaDo();
    //========================================================================//
    //===HÀM CON===//
    //THUẬT TOÁN
    public void heToaDo(){
        Graphics2D graphic = (Graphics2D) this.Panel_ToaDo.getGraphics();
        //Nen
        graphic.setColor(new Color(0,128,0)); 
        graphic.fillRect(0, 475, Panel_ToaDo.getWidth(), Panel_ToaDo.getHeight() );
        graphic.setColor(Color.GRAY); 
        graphic.fillRect(0, 0, Panel_ToaDo.getWidth(), 475 );
        
      
    //Truc toa do
        //đứng
        graphic.setColor(Color.black);
        for (int i = 0; i <= Panel_ToaDo.getWidth() ; i++) {
            graphic.drawLine(5 * i, 0, 5 * i, Panel_ToaDo.getHeight());
        }
       //ngang
        for (int j = 0; j <= Panel_ToaDo.getHeight() ; j++) {
            graphic.drawLine(0, 5 * j, Panel_ToaDo.getWidth(), 5 * j);
        }
        
        graphic.setColor(Color.RED);   
        graphic.drawLine(Panel_ToaDo.getWidth()/2, 0, Panel_ToaDo.getWidth()/2, Panel_ToaDo.getHeight());
        graphic.drawLine(0, Panel_ToaDo.getHeight()/2, Panel_ToaDo.getWidth(), Panel_ToaDo.getHeight()/2);

    }
    
    public void putpixel(int x,int y,Color m){
        double a=5;
        if (x < 0 || x > Panel_ToaDo.getWidth() || y < 0 || y > Panel_ToaDo.getHeight()) return;
          
        Graphics2D graphic = (Graphics2D) this.Panel_ToaDo.getGraphics();
        
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double(x, y, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double(x - a, y - a, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double( x , y - a, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double( x - a, y, a, a));
    }
    public void putpixel_nho(int x,int y,Color m){
        double a=2.5;
        if (x < 0 || x > Panel_ToaDo.getWidth() || y < 0 || y > Panel_ToaDo.getHeight()) return;
          
        Graphics2D graphic = (Graphics2D) this.Panel_ToaDo.getGraphics();
        
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double(x, y, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double(x - a, y - a, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double( x , y - a, a, a));
          
        graphic.setPaint(m);
        graphic.fill(new Ellipse2D.Double( x - a, y, a, a));
    }
    
    public void put4pitxel(int x, int y, int pointx, int pointy, Color m) {
        //put dưới
            //nửa phải
        putpixel( x + pointx, y + pointy, m);
            //nửa trái
        putpixel(-x + pointx, y + pointy, m);
        
        //put trên
            //nửa phải
        putpixel( x + pointx, -y + pointy, m);
            //nửa trái
        putpixel(-x + pointx, -y + pointy, m);
    }
    // vẽ nửa cung elip
    public void put2pitxel(int x, int y, int pointx, int pointy, Color m) {
               //put dưới
            //nửa phải
        putpixel( x + pointx, y + pointy, m);
        
        //put trên
            //nửa phải
        putpixel( x + pointx, -y + pointy, m);

    }
    public void put8pitxel(int x,int y,int cx,int cy,Color m){
            putpixel(cx + x,cy + y, m);
            putpixel(cx + x,cy - y, m);
            putpixel(cx - x,cy + y, m);
            putpixel(cx - x,cy - y, m);
            putpixel(cx + y,cy + x, m);
            putpixel(cx + y,cy - x, m);
            putpixel(cx - y,cy + x, m);
            putpixel(cx - y,cy - x, m);
    }
    
    public void line_DDA(Dthang T){ // Ve duong thang co dinh dang mau
        Color m = T.mau;
        DoiToaDo doitoado = new DoiToaDo();
        int Dx, Dy, count, temp_1, temp_2;
        Dx = T.diemcuoi.x - T.diemdau.x;
        Dy = T.diemcuoi.y - T.diemdau.y;
       
        if (Math.abs(Dy) > Math.abs(Dx)) count = Math.abs(Dy);
        else count = Math.abs(Dx);
        float x, y, delta_X, delta_Y;
        if (count > 0){
            delta_X = Dx;
            delta_X /= count;
            delta_Y = Dy;
            delta_Y /= count;
            x =T.diemdau.x;
            y = T.diemdau.y;

            do{
                temp_1 = doitoado.round(x);
                temp_2 = doitoado.round(y);
                putpixel(temp_1, temp_2, m);
                x += delta_X;
                y += delta_Y;
                count--;
            } while (count != -1);
        }
    }
    public void line_DDA_nho(Dthang T){ // Ve duong thang co dinh dang mau
        Color m = T.mau;
        DoiToaDo doitoado = new DoiToaDo();
        int Dx, Dy, count, temp_1, temp_2;
        Dx = T.diemcuoi.x - T.diemdau.x;
        Dy = T.diemcuoi.y - T.diemdau.y;
       
        if (Math.abs(Dy) > Math.abs(Dx)) count = Math.abs(Dy);
        else count = Math.abs(Dx);
        float x, y, delta_X, delta_Y;
        if (count > 0){
            delta_X = Dx;
            delta_X /= count;
            delta_Y = Dy;
            delta_Y /= count;
            x =T.diemdau.x;
            y = T.diemdau.y;

            do{
                temp_1 = doitoado.round(x);
                temp_2 = doitoado.round(y);
                putpixel_nho(temp_1, temp_2, m);
                x += delta_X;
                y += delta_Y;
                count--;
            } while (count != -1);
        }
    }
    
    public void Midpoint_htron (Htron T){// ve hinh tron
        int x, y,cx,cy,p,R;
        DoiToaDo doitoado = new DoiToaDo();
        Color m=T.mau;
        cx = T.tam.x; cy = T.tam.y;
        x = 0;
        y = R = T.bkinh;
       // int maxX = doitoado.round( (float) (Math.sqrt(2)/2*R));
        // int maxX = Math.Sqrt(2) / 2 * R;
        p = 1 - R;
        put8pitxel(x, y, cx, cy, m);
        while (x < y){ //x <= maxX
            if (p < 0) p += (2 * x+3);
            else { p += (2 * (x - y) +5); y-=5; }
            x+=5;
            put8pitxel(x,y,cx,cy, m);
        }
    }
    
    public void Midpoint_elip2(Elip T) {
        DoiToaDo doitoado = new DoiToaDo();
        int x, y, pointx, pointy, R, r;
        pointx = T.point.x;
        pointy = T.point.y;
        R = T.R;
        r = T.r;
        Color m = T.mau;
        x = 0;
        y = r;
        int A, B;
        A = R * R;
        B = r * r;
        double p = B + A / 4 - A * r;
        x = 0;
        y = r;
        int Dx = 0;
        int Dy = 2 * A * y;
        put2pitxel(x, y, pointx, pointy, m);

        while (Dx < Dy) {
            x++;
            Dx += 2 * B;
            if (p < 0) {
                p += B + Dx;
            } else {
                y--;
                Dy -= 2 * A;
                p += B + Dx - Dy;
            }
            if (x % 1 == 0) {
                put2pitxel(x, doitoado.round(y), pointx, pointy, m);
            }
        }
        p = Math.round(B * (x + 0.5f) * (x + 0.5f) + A * (y - 1) * (y - 1) - A * B);
        while (y > 0) {
            y--;
            Dy -= A * 2;
            if (p > 0) {
                p += A - Dy;
            } else {
                x++;
                Dx += B * 2;
                p += A - Dy + Dx;
            }
            if (x % 1 == 0) {
                put2pitxel(x, doitoado.round(y), pointx, pointy, m);
            }
        }
    }
    public void Midpoint_elip(Elip T) {
        DoiToaDo doitoado = new DoiToaDo();
        int x, y, pointx, pointy, R, r;
        pointx = T.point.x;
        pointy = T.point.y;
        R = T.R;
        r = T.r;
        Color m = T.mau;
        x = 0;
        y = r;
        int A, B;
        A = R * R;
        B = r * r;
        double p = B + A / 4 - A * r;
        x = 0;
        y = r;
        int Dx = 0;
        int Dy = 2 * A * y;
        put4pitxel(x, y, pointx, pointy, m);

        while (Dx < Dy) {
            x++;
            Dx += 2 * B;
            if (p < 0) {
                p += B + Dx;
            } else {
                y--;
                Dy -= 2 * A;
                p += B + Dx - Dy;
            }
            //if (x % 1 == 0) {
                put4pitxel(x, doitoado.round(y), pointx, pointy, m);
            //}
        }
        p = Math.round(B * (x + 0.5f) * (x + 0.5f) + A * (y - 1) * (y - 1) - A * B);
        while (y > 0) {
            y--;
            Dy -= A * 2;
            if (p > 0) {
                p += A - Dy;
            } else {
                x++;
                Dx += B * 2;
                p += A - Dy + Dx;
            }
            //if (x % 1 == 0) {
                put4pitxel(x, doitoado.round(y), pointx, pointy, m);
            //}
        }
    }
 /**    
    //tịnh tiến
    public Point Tinhtien(Point d1,int dx,int dy){// tinh tien sang diem moi

            int x,y;
            x=d1.x;y=d1.y;
            double[][] matran1;
            double[] mang;
            mang = new double[3];
            matran1 = new double[3][3];

            //Ma tran cua phep tinh tien diem p theo vecter(dx,dy);
            matran1[0][0] = 1; 
            matran1[0][1] = 0; 
            matran1[0][2] = 0;
            matran1[1][0] = 0; 
            matran1[1][1] = 1; 
            matran1[1][2] = 0;
            matran1[2][0] = dx; 
            matran1[2][1] = dy; 
            matran1[2][2] = 1;
            mang[0] = x; 
            mang[1] = y; 
            mang[2] = 1;
            Point pt2 = nhanMT2(matran1, mang);
            Point kq = new Point(doitoado.round(pt2.x), doitoado.round(pt2.y));
            return kq;
    }
    
    public Point nhanMT2(double[][]matran, double[] mang){
        double[] mangtam;
        mangtam = new double[3];
        int dem = 0;
        for (int i = 0; i < 3; i++)
        {
            mangtam[i] =     mang[0] * matran[0][dem] 
                        +    mang[1] * matran[1][dem] 
                        +    mang[2] * matran[2][dem];
            dem++;
        }
        Point pt = new Point((int)(mangtam[0]), (int)(mangtam[1]));
        return pt;
    }
    
    public void bd_tinhtien_elip1(int dx, int dy, Color color){
       Elip temp = new Elip(Tinhtien(point36, dx,dy), 10, 5, color);
                Midpoint_elip(temp);
    }
    public void bd_tinhtien_dt_muiten(int dx,int dy, Color color){
        Dthang dt28 = new Dthang(Tinhtien(point28,10,-10), Tinhtien(point38, 10,-15), color);
            line_DDA(dt28);
    }
 */  
    //VẼ HÌNH 
    private void Header(){
        point24 = new Point (160,300);
        ht5 = new Htron(20,point24,choosecolor);
        Midpoint_htron(ht5);
    }
    
    private void Body(){
        //thanh nguoi
        point25 = new Point (160,340);
        point26 = new Point (160,380);
        dt17 = new Dthang (point25,point26, choosecolor);
        line_DDA(dt17);
        //tay trai
        point27 = new Point (120,330);
        dt18 = new Dthang (point25,point27,choosecolor);
        line_DDA(dt18);
        point28 = new Point (145,315);
        dt19 = new Dthang (point27,point28,choosecolor );
        line_DDA(dt19);
        //tay phai
        point29 = new Point (180,335);
        dt20 = new Dthang(point25, point29, choosecolor);
        line_DDA(dt20);
        point30 = new Point (210,315);
        dt21 = new Dthang( point29, point30, choosecolor);
        line_DDA(dt21);
        //chantrai//
        point31 = new Point (150,430);
        dt22 = new Dthang(point26, point31, choosecolor);
        line_DDA(dt22);
        point32 = new Point (140,470);
        dt23 = new Dthang(point31, point32, choosecolor);
        line_DDA(dt23);
            //ban chan
        point33 = new Point (150,470);
        el1 = new Elip(point33, 10, 5, choosecolor);
        Midpoint_elip(el1);
        //chan phai
        point34 = new Point (180,430);
        dt24 = new Dthang(point26, point34, choosecolor);
        line_DDA(dt24);
        point35 = new Point (190,470);
        dt25 = new Dthang(point34, point35, choosecolor);
        line_DDA(dt25);
            //ban chan
        point36 = new Point (200,470);
        el2 = new Elip(point36, 10, 5, choosecolor);
        Midpoint_elip(el2);
 
    }
    
    private void Cung(){
        //cung
        point42 = new Point (190,315);
        el3 = new Elip(point42, 20, 70, new Color(139,69,19));
        Midpoint_elip2(el3);
    }
        public void cungTen(){
//day cung tren
        point37 = new Point(190, 245);

        dt26 = new Dthang(point28,point37, new Color(250,250,210));
        line_DDA_nho(dt26); 
//day cung duoi
        point39 = new Point(190, 385);

        dt27 = new Dthang(point28, point39, new Color(250,250,210));
        line_DDA_nho(dt27);
// Mui ten
        point41 = new Point (145,315);        
        point44 = new Point(270, 315);
        dt28 = new Dthang(point41, point44, new Color(224,255,255));
        line_DDA(dt28);
    }
        private void BanDayCung(int x, int y, Color color){
       // point37 = new Point (190, 245);        
        //point39 = new Point (190, 315);
        point43 = new Point(145+x, 315-y);
        dt29 = new Dthang(point37, point43, color);
        line_DDA_nho(dt29);
        dt30 = new Dthang(point43, point39, color);
        line_DDA_nho(dt30);
        

    }
    public void biaBan(){
        int a = 710;
        int b = 315;
           point40 = new Point(a, b); 
                //chan
        point50 = new Point(a-30, 470);
        dt28 = new Dthang(point40, point50, new Color(139,69,19));
        line_DDA(dt28);
        point51 = new Point(a+30, 470);
        dt28 = new Dthang(point40, point51, new Color(139,69,19));
        line_DDA(dt28);
        point51 = new Point(a+100, 470);
        dt28 = new Dthang(point40, point51, new Color(139,69,19));
        line_DDA(dt28);
                // Bia Ban

            el5 = new Elip(point40, 40, 60, new Color(255,255,255) );
            Midpoint_elip(el5); 
            point45 = new Point(a, b);
            el6 = new Elip(point45, 35, 55,Color.BLACK);
            Midpoint_elip(el6);
            point46 = new Point(a, b);
            el7 = new Elip(point46, 30, 45,new Color(0,0,255));
            Midpoint_elip(el7);
            point47 = new Point(a, b);
            el8 = new Elip(point47, 25, 33,new Color(255,69,0));
            Midpoint_elip(el8);
            point48 = new Point(a, b);
            el9 = new Elip(point48, 20, 20,new Color(255,69,0));
            Midpoint_elip(el9);
            point48 = new Point(a, b);
            el9 = new Elip(point48, 10, 10,new Color(255,215,0));
            Midpoint_elip(el9);
            point48 = new Point(a, b);
            el9 = new Elip(point48, 5, 5,new Color(255,215,0));
            Midpoint_elip(el9);

        }
    
    private void Ball(int x, int y, Color color){
        
        point41 = new Point (145+x,315-y);        
        point44 = new Point(270+x, 315-y);
        dt28 = new Dthang(point41, point44, color);
        line_DDA(dt28);      
    }
    public void toaDo_truoc(){
        TextField1.setText(""+doitoado.doiMtoND(point24.x, point24.y).x+"; "+doitoado.doiMtoND(point24.x, point24.y).y);
        TextField8.setText(""+doitoado.doiMtoND(point25.x, point25.y).x+"; "+doitoado.doiMtoND(point25.x, point25.y).y);
        TextField2.setText(""+doitoado.doiMtoND(point28.x, point28.y).x+"; "+doitoado.doiMtoND(point28.x, point28.y).y);
        TextField9.setText(""+doitoado.doiMtoND(point30.x, point30.y).x+"; "+doitoado.doiMtoND(point30.x, point30.y).y);
        TextField3.setText(""+doitoado.doiMtoND(point26.x, point26.y).x+"; "+doitoado.doiMtoND(point26.x, point26.y).y);
        TextField10.setText(""+doitoado.doiMtoND(point26.x, point26.y).x+"; "+doitoado.doiMtoND(point26.x, point26.y).y);
        TextField4.setText(""+doitoado.doiMtoND(point33.x, point33.y).x+"; "+doitoado.doiMtoND(point33.x, point33.y).y);
        TextField11.setText(""+doitoado.doiMtoND(point36.x, point36.y).x+"; "+doitoado.doiMtoND(point36.x, point36.y).y);
        TextField5.setText(""+doitoado.doiMtoND(point42.x, point42.y).x+"; "+doitoado.doiMtoND(point42.x, point42.y).y);
        TextField12.setText(""+doitoado.doiMtoND(point28.x, point28.y).x+"; "+doitoado.doiMtoND(point28.x, point28.y).y);
        TextField6.setText(""+doitoado.doiMtoND(point41.x, point41.y).x+"; "+doitoado.doiMtoND(point41.x, point41.y).y);
        TextField13.setText(""+doitoado.doiMtoND(point44.x, point44.y).x+"; "+doitoado.doiMtoND(point44.x, point44.y).y);
        TextField7.setText(""+doitoado.doiMtoND(point45.x, point45.y).x+"; "+doitoado.doiMtoND(point45.x, point45.y).y);
        
    }
    //HIỆU ỨNG
   
    private void hieuUng_muiTen(){
        int i;
        for(i=40; i<=400; i=i+40){
            Ball(i,0,new Color(224,255,255));      
            
            Ball(i,0,Color.GRAY); 
        }
        
        //TextField1.setText(""+(315+i)+"; 315");
        Ball(i,0,new Color(224,255,255));
        TextField6.setText(""+doitoado.doiMtoND(point41.x, point41.y).x+"; "+doitoado.doiMtoND(point41.x, point41.y).y);
        TextField13.setText(""+doitoado.doiMtoND(point44.x, point44.y).x+"; "+doitoado.doiMtoND(point44.x, point44.y).y);
     }
    private void hieuUng_dayCung(){
        int i;
        for(i=0; i<45; i=i+20){
            BanDayCung(i,0,new Color(250,250,210));
            Ball(i,0,new Color(224,255,255));
            Body();
            Header();
            BanDayCung(i,0,Color.GRAY);
            Ball(i,0,Color.GRAY);
            
        }
        
        Body();
        Header();
         //cung
        BanDayCung(45,0,new Color(250,250,210));
        TextField12.setText(""+doitoado.doiMtoND(point43.x, point43.y).x+"; "+doitoado.doiMtoND(point43.x, point43.y).y);
         
        
    }
    
   //========================================================================//
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_ToaDo;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextField10;
    private javax.swing.JTextField TextField11;
    private javax.swing.JTextField TextField12;
    private javax.swing.JTextField TextField13;
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField TextField3;
    private javax.swing.JTextField TextField4;
    private javax.swing.JTextField TextField5;
    private javax.swing.JTextField TextField6;
    private javax.swing.JTextField TextField7;
    private javax.swing.JTextField TextField8;
    private javax.swing.JTextField TextField9;
    private javax.swing.JButton draw;
    private javax.swing.JButton hieu_ung;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox_SG;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_showvach;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItem_2D;
    private javax.swing.JMenuItem jMenuItem_3D;
    private javax.swing.JMenu jMenu_App;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel_showvach;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane_show;
    private javax.swing.JLabel lbl2D;
    // End of variables declaration//GEN-END:variables
}
